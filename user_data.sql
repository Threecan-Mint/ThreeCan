/*
legacy table
                        Table "public.users"
    Column    |          Type           | Collation | Nullable | Default 
--------------+-------------------------+-----------+----------+---------
 userid       | character varying(60)   |           |          | 
 brandid      | character varying(60)   |           |          | 
 accesstoken  | character varying(1000) |           |          | 
 refreshtoken | character varying(1000) |           |          | 
 idtoken      | character varying(1500) |           |          | 
Indexes:


/*
  Define and export an asynchronous function named 'updateTokensInDB' that updates a user's access tokens in a PostgreSQL database.

  accessToken: This is provided by Auth0 after a successful authentication and is used to authorize API calls on behalf of a user. 
  An access token is an opaque string that identifies a user, app, or page. 
  It can be used by the app to make graph API calls and is unique to each user.

  refreshToken: This is also provided by Auth0. A Refresh Token is a special kind of token that can be used to obtain a renewed access token.
  It allows you to have short-lived access tokens without having to collect credentials every time they expire. 
  Refresh tokens must be stored securely by an application because they essentially allow a user to remain authenticated forever.

  idToken: This is a JSON Web Token (JWT) that contains user profile attributes represented in the form of claims. 
  The ID Token is consumed by the client and claims from it are used for UI display. 
  It's provided by Auth0 as well and it's used to securely transmit the user information to your app after a successful authentication.

  userId: This would be the unique identifier for a user in your system, it might be provided either by Canva or Auth0, or it might be generated by your application. 
  In this case, it seems to be provided by Canva (in the JWT) to identify the user.

  brandId: This identifier is specific to Canva, and represents the brand that a user is currently designing for. 
  Each Canva user might have multiple brands, and this identifier helps your application understand which one they're working on when they're interacting with your app.
*/

*/

CREATE TABLE user_identifiers (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user_profiles (
    user_id INT PRIMARY KEY REFERENCES user_identifiers(id),
    email VARCHAR(255) NOT NULL UNIQUE,
    canva_user_id VARCHAR(255) NOT NULL,
    auth0_id VARCHAR(255)
);

CREATE TABLE user_credits (
    user_id INT PRIMARY KEY REFERENCES user_identifiers(id),
    credits INT DEFAULT 0,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE teams (
    id SERIAL PRIMARY KEY,
    canva_team_id VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE team_memberships (
    user_id INT REFERENCES user_identifiers(id),
    team_id INT REFERENCES teams(id),
    PRIMARY KEY (user_id, team_id)
);

CREATE TABLE user_tokens (
    user_id INT PRIMARY KEY REFERENCES user_identifiers(id),
    access_token VARCHAR(1000),
    refresh_token VARCHAR(1000),
    id_token VARCHAR(1500)
);

CREATE TABLE subscriptions (
    user_id INT PRIMARY KEY REFERENCES user_identifiers(id),
    stripe_subscription_id VARCHAR(255),
    plan VARCHAR(50),
    start_date TIMESTAMP WITH TIME ZONE,
    end_date TIMESTAMP WITH TIME ZONE,
    status VARCHAR(50)
);

